#
# Copyright (C) 2020 Argos Notary Co√∂peratie UA
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

openapi: "3.0.0"
info:
  version: 1.0.0
  title: Argos Service
  license:
    name: Apache License 2.0
servers:
  - url: /api
paths:
  /collector/artifacts:
    post:
      summary: collect artifact at the source location
      operationId: collectArtifacts
      tags:
        - artifactCollector
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CollectorSpecification"
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Artifact"
        '400':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/Error'

components:
  responses:
    ValidationError:
      description: validation error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Error:
      description: server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    CollectorSpecification:
      type: object
      description: additional key value pair attributes that can vary per collector type
      additionalProperties:
        type: string

    Artifact:
      type: object
      required:
        - uri
        - hash
      properties:
        uri:
          type: string
          maxLength: 1024
          pattern: '^(?!.*\\).*$'
        hash:
          type: string
          minLength: 64
          maxLength: 64
          pattern: '^[0-9a-f]*$'

    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string